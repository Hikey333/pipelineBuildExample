apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: create-runtime-image
spec:
  params:
    - name: TLSVERIFY
      type: string
      default: 'false'
    - name: STORAGE_DRIVER
      type: string
    - name: gitrepository_url
      type: string
    - name: gitrepository_fullname
      type: string
    - name: commit_prior_revision
      type: string
    - name: commit_ref
      type: string
    - name: commit_id
      type: string
    - name: commit_date
      type: string
    - name: commit_message
      type: string
    - name: commit_author
      type: string
    - name: pipelineName
      type: string
    - name: pipelineRunName
      type: string
    - name: public-name
      type: string
    - name: appName
      type: string
  resources:
    inputs:
      - name: intermediate-image
        type: image
    outputs:
      - name: runtime-image
        type: image
  results:
    - name: public-repo-location
  steps:
    - name: extract-built-object
      command:
        - buildah
        - bud
        - '--tls-verify=$(params.TLSVERIFY)'
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--layers'
        - '-f'
        - '/files/build/dockerfiles/image-assembly-dockerfile'
        - '--root'
        - '/files/buildah-containers'
        - '-t'
        - $(resources.outputs.runtime-image.url)
        - .
      image: registry.redhat.io/rhel8/buildah
      volumeMounts:
        - name: envparams
          mountPath: /env-params
    - name: view-images
      command:
        - buildah
        - images
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--root'
        - '/files/buildah-containers'
      image: registry.redhat.io/rhel8/buildah
    - name: push-image-to-openshift
      command:
        - buildah
        - push
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--tls-verify=$(params.TLSVERIFY)'
        - '--root'
        - '/files/buildah-containers'
        - $(resources.outputs.runtime-image.url)
        - 'docker://$(resources.outputs.runtime-image.url)'
      image: registry.redhat.io/rhel8/buildah
    - name: get-public-docker-image-repository
      script: >-
        #!/usr/bin/env bash

        set +x

        oc project $(params.appName)

        echo "oc get is/$(params.public-name) -o jsonpath='{.status.publicDockerImageRepository}'> $(results.public-repo-location.path)"

        oc get is

        oc get is/$(params.public-name) -o jsonpath='{.status.publicDockerImageRepository}'

        oc get is/$(params.public-name) -o jsonpath='{.status.publicDockerImageRepository}'> $(results.public-repo-location.path)

      image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
  workspaces:
  - name: files
    mountPath: /files
