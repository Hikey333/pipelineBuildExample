apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: generate-runtime-image-dockerfile
spec:
  params:
    - name: gitrepository_url
      type: string
    - name: gitrepository_fullname
      type: string
    - name: commit_prior_revision
      type: string
    - name: commit_ref
      type: string
    - name: commit_id
      type: string
    - name: commit_date
      type: string
    - name: commit_message
      type: string
    - name: commit_author
      type: string
    - name: pipelineName
      type: string
    - name: pipelineRunName
      type: string
  resources:
    inputs:
      - name: intermediate-image
        type: image
    outputs:
      - name: runtime-image
        type: image
  steps:
    - name: gen-binary-extraction-dockerfile
      command:
        - /bin/sh
        - '-c'
      args:
        - |-
          echo "FROM $(resources.inputs.intermediate-image.url) as intermediate-image" > ext-dockerfile.gen
          echo "FROM docker.io/openliberty/open-liberty as runtime-image" >> ext-dockerfile.gen
          echo "COPY --from=intermediate-image /deployments/liberty-rest-app.war /config/apps/liberty-rest-app.war" >> ext-dockerfile.gen
          echo "COPY --from=intermediate-image /deployments/server.xml /config/server.xml" >> ext-dockerfile.gen
          echo "LABEL github.repository.url=\"$(params.gitrepository_url)\" \\" >> ext-dockerfile.gen
          echo "github.repository.fullname=\"$(params.gitrepository_fullname)\" \\" >> ext-dockerfile.gen
          echo "github.commit.ref=\"$(params.commit_ref)\" \\" >> ext-dockerfile.gen
          echo "github.commit.id=\"$(params.commit_id)\" \\" >> ext-dockerfile.gen
          echo "github.commit.message=\"$(params.commit_message)\" \\" >> ext-dockerfile.gen
          echo "github.commit.date=\"$(params.commit_date)\" \\" >> ext-dockerfile.gen
          echo "github.commit_author=\"$(params.commit_author)\" \\" >> ext-dockerfile.gen
          echo "pipeline.name=\"$(params.pipelineName)\" \\" >> ext-dockerfile.gen
          echo "pipeline.run=\"$(params.pipelineRunName)\" \\" >> ext-dockerfile.gen
          echo "pipeline.task.run.name=\"$(context.taskRun.name)\"" >> ext-dockerfile.gen
          echo "------------------------------"
          cat ext-dockerfile.gen
          echo "------------------------------"
      image: registry.redhat.io/ocp-tools-43-tech-preview/source-to-image-rhel8
      volumeMounts:
        - name: pipeline-cache
          mountPath: /var/lib/containers
      workingDir: /var/lib/containers
  volumes:
    - name: pipeline-cache
      persistentVolumeClaim:
        claimName: pipeline-task-cache-pvc
